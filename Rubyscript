pipeline {
    agent any
    
    agent {
        label "docker-slave"
    }

    environment {
        RAILS_ENV = 'Ruby app production'
        branch_name = ''
        GIT_REPO_URL = ''
        your_credentials_id = ''
    }

    stages {
        stage('Start') {
            steps {
                script {
                    echo 'Starting the pipeline'
                    env.RAILS_ENV = 'Ruby app production'
                }
            }
        }

        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clone') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [
                        [name: "${branch_name}"]
                    ],
                    userRemoteConfigs: [
                        [
                            credentialsId: 'your-credentials-id',
                            refspec: '',
                            url: "${GIT_REPO_URL}"
                        ]
                    ]
                ])
            }
        }

        stage('Build Ruby') {
            parallel {
                stage('Build Backend') {
                    steps {
                        script {
                            dir('backend') {
                                sh 'bundle install'
                                sh 'bundle exec rake db:migrate'
                                sh 'rake assets:precompile'
                            }
                        }
                    }
                }

                stage('Build Frontend') {
                    steps {
                        script {
                            dir('frontend') {
                                sh 'npm install'
                                sh 'npm run build'
                            }
                        }
                    }
                }
            }
        }
        
        stage('Store Artifacts') {
            steps {
                archiveArtifacts artifacts: '**/target/*.war', allowEmptyArchive: true
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed'
        }
    }
}
